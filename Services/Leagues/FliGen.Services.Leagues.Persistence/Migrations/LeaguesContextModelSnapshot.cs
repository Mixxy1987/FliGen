// <auto-generated />
using System;
using FliGen.Services.Leagues.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FliGen.Services.Leagues.Persistence.Migrations
{
    [DbContext(typeof(LeaguesContext))]
    partial class LeaguesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FliGen.Services.Leagues.Domain.Entities.Enum.LeaguePlayerPriority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("LeaguePlayerPriority");
                });

            modelBuilder.Entity("FliGen.Services.Leagues.Domain.Entities.Enum.LeaguePlayerRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("LeaguePlayerRole");
                });

            modelBuilder.Entity("FliGen.Services.Leagues.Domain.Entities.Enum.LeagueType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("LeagueType");
                });

            modelBuilder.Entity("FliGen.Services.Leagues.Domain.Entities.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("LeagueTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("League");
                });

            modelBuilder.Entity("FliGen.Services.Leagues.Domain.Entities.LeaguePlayerLink", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Actual")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JoinTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaguePlayerPriority")
                        .HasColumnType("int");

                    b.Property<int>("LeaguePlayerRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LeaveTime")
                        .HasColumnType("datetime2");

                    b.HasKey("PlayerId", "LeagueId", "CreationTime");

                    b.HasIndex("LeagueId");

                    b.ToTable("LeaguePlayerLinks");
                });

            modelBuilder.Entity("FliGen.Services.Leagues.Domain.Entities.LeagueSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<int?>("PlayersInTeam")
                        .HasColumnType("int");

                    b.Property<bool>("RequireConfirmation")
                        .HasColumnType("bit");

                    b.Property<int?>("TeamsInTour")
                        .HasColumnType("int");

                    b.Property<bool>("Visibility")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId")
                        .IsUnique();

                    b.ToTable("LeagueSettings");
                });

            modelBuilder.Entity("FliGen.Services.Leagues.Domain.Entities.LeaguePlayerLink", b =>
                {
                    b.HasOne("FliGen.Services.Leagues.Domain.Entities.League", "League")
                        .WithMany("LeaguePlayerLinks")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FliGen.Services.Leagues.Domain.Entities.LeagueSettings", b =>
                {
                    b.HasOne("FliGen.Services.Leagues.Domain.Entities.League", "League")
                        .WithOne("LeagueSettings")
                        .HasForeignKey("FliGen.Services.Leagues.Domain.Entities.LeagueSettings", "LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
